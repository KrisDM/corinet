/*********************************************************************************************
 * Name		:  CompositeTaskCtTest1.cpp
 *
 * Purpose	:
 *
 * Notes	:  This file was generated by CORINET on Wed Dec 20 17:25:16 2006 
 *
 * Info		:  http://www.corinet.org
 *
 * Copyright:
 *
 * Licensce	: This program is free software; you can redistribute it and/or modify
 * 			   it under the terms of the GNU General Public License as published by
 * 			   the Free Software Foundation; either version 2 of the License, or
 * 			   (at your option) any later version.
 *
 * 			   This program is distributed in the hope that it will be useful,
 * 			   but WITHOUT ANY WARRANTY; without even the implied warranty of
 * 			   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * 			   GNU General Public License in $CORINETROOT/licenses for more details.
 *
 **********************************************************************************************/


#include <Util/Factory.h>
#include <Common/RandGen.h>
#include <Common/Attenuation.h>
#include <Common/NoiseFunction.h>
#include <Task/Insert.h>
#include "CompositeTaskCtTest1.h"

namespace CORINET {

CTaskCtTest1::CTaskCtTest1(size_t* s,double* params) : CTaskComposite(s)
{
	/*parameters available in s:
		s[0]: number of columns in pattern
		s[1]: number of rows in pattern
		s[2]: number of patterns that should be stored

	
	mTestParam = params[0];
}

CTaskCtTest1::~CTaskCtTest1()
{

}

void CTaskCtTest1::Initialise()
{
	/*insertText your code here*/
	CTaskComposite::Initialise(); //always call at the end
}

void CTaskCtTest1::Finalise()
{
	/*insertText your code here*/
	CTaskComposite::Finalise(); //always call at the end
}

void CTaskCtTest1::Generate(bool randseq)
{
	if (!Get(randseq)) {
		/*generate your pattern here*/
		Put(); //always call at the end
	}
	if (pAttenuation) (*pAttenuation)(*GetValues());
	if (pNoise) (*pNoise)(*GetValues());
}

void CTaskCtTest1::Seed(size_t s)
{
	/*insertText your code here*/
	CTaskComposite::Seed(s); //always call at the end
}

void CTaskCtTest1::SetParam(size_t p,double v)
{
	switch (p) {
	case 0:
		mTestParam = v;
		break;
	}
}

double CTaskCtTest1::GetParam(size_t p)
{
	double v = 0.0;
	switch (p) {
	case 0:
		v = mTestParam;
		break;
	}
	return v;
}

/*macro registers class name, see Factory.h for details*/
REGISTER_CLASS_1(CTask,CTaskCtTest1,ctTest1)

} //end namespace CORINET

