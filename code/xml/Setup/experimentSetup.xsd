<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSpy v2007 (http://www.altova.com) by Kris De Meyer (N/A) --><xs:schema xmlns="http://www.corinet.org/namespaces/CORINETSetup" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.corinet.org/namespaces/CORINETSetup" elementFormDefault="qualified" attributeFormDefault="unqualified">	<xs:element name="experiment">		<xs:annotation>			<xs:documentation>Schema defining format for setup files for individual experiments</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element name="annotation" type="annotationType" minOccurs="0"/>				<xs:element name="inputSection">					<xs:complexType>						<xs:sequence>							<xs:element name="inputBlock" maxOccurs="unbounded">								<xs:complexType>									<xs:choice maxOccurs="unbounded">										<xs:element name="inputIndices">											<xs:simpleType>												<xs:list itemType="xs:nonNegativeInteger"/>											</xs:simpleType>										</xs:element>										<xs:element name="inputRange">											<xs:complexType>												<xs:attribute name="begin" type="xs:nonNegativeInteger" use="required"/>												<xs:attribute name="step" type="xs:positiveInteger" use="required"/>												<xs:attribute name="end" type="xs:nonNegativeInteger" use="required"/>											</xs:complexType>										</xs:element>									</xs:choice>									<xs:attribute name="id" type="xs:ID" use="required"/>								</xs:complexType>							</xs:element>						</xs:sequence>					</xs:complexType>				</xs:element>				<xs:element name="networkSection">					<xs:complexType>						<xs:sequence>							<xs:element name="network" maxOccurs="unbounded">								<xs:complexType>									<xs:sequence>										<xs:element name="netParams" minOccurs="0">											<xs:complexType>												<xs:choice minOccurs="0" maxOccurs="unbounded">													<xs:element name="param" type="paramType"/>													<xs:element name="loopParam" type="loopParamType"/>												</xs:choice>											</xs:complexType>										</xs:element>										<xs:element name="block" maxOccurs="unbounded">											<xs:complexType>												<xs:sequence>													<xs:element name="blockParams" minOccurs="0">														<xs:complexType>															<xs:choice minOccurs="0" maxOccurs="unbounded">																<xs:element name="param" type="paramType"/>																<xs:element name="loopParam" type="loopParamType"/>															</xs:choice>														</xs:complexType>													</xs:element>													<xs:element name="integrationSite" maxOccurs="unbounded">														<xs:complexType>															<xs:sequence>																<xs:element name="siteParams" minOccurs="0">																	<xs:complexType>																		<xs:choice minOccurs="0" maxOccurs="unbounded">																			<xs:element name="param" type="paramType"/>																			<xs:element name="loopParam" type="loopParamType"/>																		</xs:choice>																	</xs:complexType>																</xs:element>																<xs:element name="initialisation" type="initialisationType" minOccurs="0"/>																<xs:element name="normalisation" type="normalisationType" minOccurs="0"/>															</xs:sequence>															<xs:attribute name="type" type="xs:NCName" use="required"/>															<xs:attribute name="inputRefs" use="required">																<xs:simpleType>																	<xs:restriction base="xs:IDREFS">																		<xs:minLength value="1"/>																	</xs:restriction>																</xs:simpleType>															</xs:attribute>															<xs:attribute name="location" type="xs:NCName" use="optional"/>															<xs:attribute name="id" type="xs:ID" use="optional"/>														</xs:complexType>													</xs:element>													<xs:element name="outputFunction" type="outputFunctionType" minOccurs="0"/>												</xs:sequence>												<xs:attribute name="type" type="xs:NCName" use="optional" default="blockNormal"/>												<xs:attribute name="nodes" type="xs:nonNegativeInteger" use="required"/>												<xs:attribute name="outputBlock" type="xs:boolean" use="optional" default="false"/>												<xs:attribute name="id" type="xs:ID" use="required"/>											</xs:complexType>										</xs:element>									</xs:sequence>									<xs:attribute name="type" type="xs:NCName" use="required"/>									<xs:attribute name="inputs" type="xs:positiveInteger" use="required"/>									<xs:attribute name="id" type="xs:ID" use="required"/>								</xs:complexType>							</xs:element>						</xs:sequence>					</xs:complexType>				</xs:element>				<xs:element name="taskSection">					<xs:complexType>						<xs:choice maxOccurs="unbounded">							<xs:element name="task" type="simpleTask"/>							<xs:element name="compositeTask" type="compositeTask"/>						</xs:choice>					</xs:complexType>				</xs:element>				<xs:element name="executionSection" type="engineType"/>				<xs:element name="defaultSection" minOccurs="0">					<xs:complexType>						<xs:sequence>							<xs:element ref="typeDefaults" minOccurs="0"/>							<xs:element name="targetDefaults" minOccurs="0">								<xs:annotation>									<xs:documentation>Specification of default elements for specific targets</xs:documentation>								</xs:annotation>								<xs:complexType>									<xs:sequence>										<xs:element name="default" maxOccurs="unbounded">											<xs:complexType>												<xs:choice>													<xs:element name="taskParams">														<xs:complexType>															<xs:choice minOccurs="0" maxOccurs="unbounded">																<xs:element name="param" type="paramType"/>																<xs:element name="loopParam" type="loopParamType"/>															</xs:choice>														</xs:complexType>													</xs:element>													<xs:element name="netParams">														<xs:complexType>															<xs:choice minOccurs="0" maxOccurs="unbounded">																<xs:element name="param" type="paramType"/>																<xs:element name="loopParam" type="loopParamType"/>															</xs:choice>														</xs:complexType>													</xs:element>													<xs:element name="blockParams">														<xs:complexType>															<xs:choice minOccurs="0" maxOccurs="unbounded">																<xs:element name="param" type="paramType"/>																<xs:element name="loopParam" type="loopParamType"/>															</xs:choice>														</xs:complexType>													</xs:element>													<xs:element name="siteParams">														<xs:complexType>															<xs:choice minOccurs="0" maxOccurs="unbounded">																<xs:element name="param" type="paramType"/>																<xs:element name="loopParam" type="loopParamType"/>															</xs:choice>														</xs:complexType>													</xs:element>													<xs:element name="initialisation" type="initialisationType"/>													<xs:element name="normalisation" type="normalisationType"/>													<xs:element name="outputFunction" type="outputFunctionType"/>													<xs:element name="attenuation" type="attenuationType"/>													<xs:element name="noiseFunction" type="noiseFunctionType"/>													<xs:element ref="patternSet"/>													<xs:element name="dataSource" type="dataSourceType"/>												</xs:choice>												<xs:attribute name="targets" use="required">													<xs:simpleType>														<xs:restriction base="xs:IDREFS">															<xs:minLength value="1"/>														</xs:restriction>													</xs:simpleType>												</xs:attribute>											</xs:complexType>										</xs:element>									</xs:sequence>								</xs:complexType>							</xs:element>						</xs:sequence>					</xs:complexType>				</xs:element>				<xs:element name="eventSection" type="eventSectionType" minOccurs="0"/>			</xs:sequence>			<xs:attribute name="definitionFile" type="xs:anyURI" use="required"/>			<xs:attribute name="sandBoxFiles" use="optional">				<xs:simpleType>					<xs:list itemType="xs:anyURI"/>				</xs:simpleType>			</xs:attribute>		</xs:complexType>	</xs:element>	<xs:element name="typeDefaults">		<xs:annotation>			<xs:documentation>Specification of default elements and parameters for types of integrationSites etc.</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element name="annotation" type="annotationType" minOccurs="0"/>				<xs:element name="default" maxOccurs="unbounded">					<xs:complexType>						<xs:choice>							<xs:element name="taskParams">								<xs:complexType>									<xs:sequence>										<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>									</xs:sequence>								</xs:complexType>							</xs:element>							<xs:element name="netParams">								<xs:complexType>									<xs:sequence>										<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>									</xs:sequence>								</xs:complexType>							</xs:element>							<xs:element name="blockParams">								<xs:complexType>									<xs:sequence>										<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>									</xs:sequence>								</xs:complexType>							</xs:element>							<xs:element name="siteParams">								<xs:complexType>									<xs:sequence>										<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>									</xs:sequence>								</xs:complexType>							</xs:element>							<xs:element name="initialisation">								<xs:complexType>									<xs:sequence>										<xs:element name="initParams" minOccurs="0">											<xs:complexType>												<xs:sequence>													<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>												</xs:sequence>											</xs:complexType>										</xs:element>										<xs:element name="randGen" minOccurs="0">											<xs:complexType>												<xs:sequence>													<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>												</xs:sequence>												<xs:attribute name="type" type="xs:NCName" use="required"/>												<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>											</xs:complexType>										</xs:element>									</xs:sequence>									<xs:attribute name="type" type="xs:NCName" use="required"/>								</xs:complexType>							</xs:element>							<xs:element name="normalisation">								<xs:complexType>									<xs:sequence>										<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>									</xs:sequence>									<xs:attribute name="type" type="xs:NCName" use="required"/>								</xs:complexType>							</xs:element>							<xs:element name="outputFunction">								<xs:complexType>									<xs:sequence>										<xs:element name="outputParams" minOccurs="0">											<xs:complexType>												<xs:sequence>													<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>												</xs:sequence>											</xs:complexType>										</xs:element>										<xs:element name="attenuation" minOccurs="0">											<xs:complexType>												<xs:sequence>													<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>												</xs:sequence>												<xs:attribute name="type" type="xs:NCName" use="required"/>											</xs:complexType>										</xs:element>										<xs:element name="noiseFunction" minOccurs="0">											<xs:complexType>												<xs:sequence>													<xs:element name="noiseParams" minOccurs="0">														<xs:complexType>															<xs:sequence>																<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>															</xs:sequence>														</xs:complexType>													</xs:element>													<xs:element name="randGen">														<xs:complexType>															<xs:sequence>																<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>															</xs:sequence>															<xs:attribute name="type" type="xs:NCName" use="required"/>															<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>														</xs:complexType>													</xs:element>												</xs:sequence>												<xs:attribute name="type"/>											</xs:complexType>										</xs:element>									</xs:sequence>									<xs:attribute name="type" type="xs:NCName" use="required"/>								</xs:complexType>							</xs:element>							<xs:element name="attenuation">								<xs:complexType>									<xs:sequence>										<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>									</xs:sequence>									<xs:attribute name="type" type="xs:NCName" use="required"/>								</xs:complexType>							</xs:element>							<xs:element name="noiseFunction">								<xs:complexType>									<xs:sequence>										<xs:element name="noiseParams" minOccurs="0">											<xs:complexType>												<xs:sequence>													<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>												</xs:sequence>											</xs:complexType>										</xs:element>										<xs:element name="randGen" minOccurs="0">											<xs:complexType>												<xs:sequence>													<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>												</xs:sequence>												<xs:attribute name="type" type="xs:NCName" use="required"/>												<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>											</xs:complexType>										</xs:element>									</xs:sequence>									<xs:attribute name="type"/>								</xs:complexType>							</xs:element>						</xs:choice>						<xs:attribute name="types" use="optional">							<xs:simpleType>								<xs:list itemType="xs:NCName"/>							</xs:simpleType>						</xs:attribute>						<xs:attribute name="numSites" use="optional">							<xs:simpleType>								<xs:list itemType="xs:nonNegativeInteger"/>							</xs:simpleType>						</xs:attribute>					</xs:complexType>				</xs:element>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="w">		<xs:annotation>			<xs:documentation>Explicit weight values for integration site within a block</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:choice>				<xs:element name="n" type="doubles" maxOccurs="unbounded">					<xs:annotation>						<xs:documentation>Defined for each node...</xs:documentation>					</xs:annotation>				</xs:element>				<xs:element name="i" type="doubles" maxOccurs="unbounded">					<xs:annotation>						<xs:documentation>...or for each input.</xs:documentation>					</xs:annotation>				</xs:element>			</xs:choice>		</xs:complexType>	</xs:element>	<xs:element name="patternSet">		<xs:annotation>			<xs:documentation>Predefined set of input patterns</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element name="annotation" type="annotationType" minOccurs="0"/>				<xs:element name="p" maxOccurs="unbounded">					<xs:complexType>						<xs:choice>							<xs:element name="c" type="doubles" maxOccurs="unbounded">								<xs:annotation>									<xs:documentation>Defined per column...</xs:documentation>								</xs:annotation>							</xs:element>							<xs:element name="r" type="doubles" maxOccurs="unbounded">								<xs:annotation>									<xs:documentation>...or per row.</xs:documentation>								</xs:annotation>							</xs:element>						</xs:choice>					</xs:complexType>				</xs:element>			</xs:sequence>			<xs:attribute name="columns" type="xs:positiveInteger" use="required"/>			<xs:attribute name="rows" type="xs:positiveInteger" use="optional" default="1"/>		</xs:complexType>	</xs:element>	<xs:element name="patternGenerator">		<xs:annotation>			<xs:documentation>Generate a set of patterns in a patternSet file</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element name="annotation" type="annotationType" minOccurs="0"/>				<xs:choice>					<xs:element name="task" type="simpleGenerator"/>					<xs:element name="compositeTask" type="compositeGenerator"/>				</xs:choice>			</xs:sequence>			<xs:attribute name="definitionFile" type="xs:anyURI" use="required"/>			<xs:attribute name="patterns" type="xs:positiveInteger" use="required"/>			<xs:attribute name="location" type="xs:anyURI" use="required"/>			<xs:attribute name="precision" use="optional" default="4">				<xs:simpleType>					<xs:restriction base="xs:nonNegativeInteger">						<xs:maxInclusive value="8"/>					</xs:restriction>				</xs:simpleType>			</xs:attribute>		</xs:complexType>	</xs:element>	<xs:element name="randTest">		<xs:annotation>			<xs:documentation>Generate random values in text file</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element name="annotation" type="annotationType" minOccurs="0"/>				<xs:element name="randGen">					<xs:complexType>						<xs:sequence>							<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>						</xs:sequence>						<xs:attribute name="type" type="xs:NCName" use="required"/>						<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>					</xs:complexType>				</xs:element>			</xs:sequence>			<xs:attribute name="definitionFile" type="xs:anyURI" use="required"/>			<xs:attribute name="values" type="xs:positiveInteger" use="required"/>			<xs:attribute name="location" type="xs:anyURI" use="required"/>			<xs:attribute name="precision" use="optional" default="4">				<xs:simpleType>					<xs:restriction base="xs:nonNegativeInteger">						<xs:maxInclusive value="8"/>					</xs:restriction>				</xs:simpleType>			</xs:attribute>		</xs:complexType>	</xs:element>	<xs:simpleType name="doubles">		<xs:annotation>			<xs:documentation>List of double values</xs:documentation>		</xs:annotation>		<xs:list itemType="xs:double"/>	</xs:simpleType>	<xs:complexType name="annotationType">		<xs:annotation>			<xs:documentation>Allows to provide documentation and other information</xs:documentation>		</xs:annotation>		<xs:choice minOccurs="0" maxOccurs="unbounded">			<xs:element name="appinfo">				<xs:complexType mixed="true">					<xs:sequence>						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>					<xs:attribute name="source" type="xs:anyURI" use="optional"/>				</xs:complexType>			</xs:element>			<xs:element name="documentation">				<xs:complexType mixed="true">					<xs:sequence>						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>					<xs:attribute name="source" type="xs:anyURI" use="optional"/>				</xs:complexType>			</xs:element>		</xs:choice>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="paramType">		<xs:annotation>			<xs:documentation>Single parameter values</xs:documentation>		</xs:annotation>		<xs:attribute name="value" type="xs:double" use="required"/>		<xs:attribute name="name" type="xs:NCName" use="required"/>	</xs:complexType>	<xs:complexType name="loopParamType">		<xs:annotation>			<xs:documentation>For loops running over multiple parameter values</xs:documentation>		</xs:annotation>		<xs:attribute name="name" type="xs:NCName" use="required"/>		<xs:attribute name="values" use="required">			<xs:simpleType>				<xs:restriction base="doubles">					<xs:minLength value="1"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>		<xs:attribute name="id" type="xs:ID" use="required"/>	</xs:complexType>	<xs:complexType name="randGenType">		<xs:annotation>			<xs:documentation>Random number generators</xs:documentation>		</xs:annotation>		<xs:choice minOccurs="0" maxOccurs="unbounded">			<xs:element name="param" type="paramType"/>			<xs:element name="loopParam" type="loopParamType"/>		</xs:choice>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="attenuationType">		<xs:annotation>			<xs:documentation>Attenuation functions for outputFunctions and tasks</xs:documentation>		</xs:annotation>		<xs:choice minOccurs="0" maxOccurs="unbounded">			<xs:element name="param" type="paramType"/>			<xs:element name="loopParam" type="loopParamType"/>		</xs:choice>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="noiseFunctionType">		<xs:annotation>			<xs:documentation>Noise functions for outputFunctions and tasks</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="noiseParams" minOccurs="0">				<xs:complexType>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="param" type="paramType"/>						<xs:element name="loopParam" type="loopParamType"/>					</xs:choice>				</xs:complexType>			</xs:element>			<xs:element name="randGen" type="randGenType" minOccurs="0"/>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="outputFunctionType">		<xs:annotation>			<xs:documentation>Functions calculating the output of blocks of neurons</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="outputParams" minOccurs="0">				<xs:complexType>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="param" type="paramType"/>						<xs:element name="loopParam" type="loopParamType"/>					</xs:choice>				</xs:complexType>			</xs:element>			<xs:element name="attenuation" type="attenuationType" minOccurs="0"/>			<xs:element name="noiseFunction" type="noiseFunctionType" minOccurs="0"/>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="initialisationType">		<xs:annotation>			<xs:documentation>Functions initialising weight values</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="initParams" minOccurs="0">				<xs:complexType>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="param" type="paramType"/>						<xs:element name="loopParam" type="loopParamType"/>					</xs:choice>				</xs:complexType>			</xs:element>			<xs:element name="randGen" type="randGenType" minOccurs="0"/>			<xs:element ref="w" minOccurs="0" maxOccurs="unbounded"/>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="normalisationType">		<xs:annotation>			<xs:documentation>Functions normalising weight values</xs:documentation>		</xs:annotation>		<xs:choice minOccurs="0" maxOccurs="unbounded">			<xs:element name="param" type="paramType"/>			<xs:element name="loopParam" type="loopParamType"/>		</xs:choice>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="dataSourceType">		<xs:annotation>			<xs:documentation>Interface to external data formats, for use in tasks</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="sourceParams" minOccurs="0">				<xs:complexType>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="param" type="paramType"/>						<xs:element name="loopParam" type="loopParamType"/>					</xs:choice>				</xs:complexType>			</xs:element>		</xs:sequence>		<xs:attribute name="type" use="required">			<xs:simpleType>				<xs:restriction base="xs:NCName"/>			</xs:simpleType>		</xs:attribute>		<xs:attribute name="columns" type="xs:positiveInteger" use="required"/>		<xs:attribute name="rows" type="xs:positiveInteger" use="optional" default="1"/>		<xs:attribute name="patterns" type="xs:nonNegativeInteger" use="required"/>	</xs:complexType>	<xs:complexType name="insertType">		<xs:annotation>			<xs:documentation>Insert simple tasks in composite tasks</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="insertParams" minOccurs="0">				<xs:complexType>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="param" type="paramType"/>						<xs:element name="loopParam" type="loopParamType"/>					</xs:choice>				</xs:complexType>			</xs:element>			<xs:element name="task" type="simpleTask" maxOccurs="unbounded"/>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="inColumn" type="xs:nonNegativeInteger" use="required"/>		<xs:attribute name="inRow" type="xs:nonNegativeInteger" use="optional" default="0"/>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="simpleTask">		<xs:annotation>			<xs:documentation>Simple tasks</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="taskParams" minOccurs="0">				<xs:complexType>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="param" type="paramType"/>						<xs:element name="loopParam" type="loopParamType"/>					</xs:choice>				</xs:complexType>			</xs:element>			<xs:choice minOccurs="0">				<xs:element ref="patternSet"/>				<xs:element name="dataSource" type="dataSourceType"/>			</xs:choice>			<xs:element name="attenuation" type="attenuationType" minOccurs="0"/>			<xs:element name="noiseFunction" type="noiseFunctionType" minOccurs="0"/>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="columns" type="xs:positiveInteger" use="required"/>		<xs:attribute name="rows" type="xs:positiveInteger" use="optional" default="1"/>		<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>		<xs:attribute name="store" type="xs:nonNegativeInteger" use="optional" default="0"/>		<xs:attribute name="id" type="xs:ID" use="required"/>		<xs:attribute name="sampleMethod" use="optional" default="withoutReplacement">			<xs:simpleType>				<xs:restriction base="xs:string">					<xs:enumeration value="withReplacement"/>					<xs:enumeration value="withoutReplacement"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>	</xs:complexType>	<xs:complexType name="compositeTask">		<xs:annotation>			<xs:documentation>Tasks composed of different subtasks</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="taskParams" minOccurs="0">				<xs:complexType>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="param" type="paramType"/>						<xs:element name="loopParam" type="loopParamType"/>					</xs:choice>				</xs:complexType>			</xs:element>			<xs:element name="insert" type="insertType" maxOccurs="unbounded"/>			<xs:element name="attenuation" type="attenuationType" minOccurs="0"/>			<xs:element name="noiseFunction" type="noiseFunctionType" minOccurs="0"/>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="columns" type="xs:positiveInteger" use="required"/>		<xs:attribute name="rows" type="xs:positiveInteger" use="optional" default="1"/>		<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>		<xs:attribute name="store" type="xs:nonNegativeInteger" use="optional" default="0"/>		<xs:attribute name="id" type="xs:ID" use="required"/>		<xs:attribute name="sampleMethod" use="optional" default="withoutReplacement">			<xs:simpleType>				<xs:restriction base="xs:string">					<xs:enumeration value="withReplacement"/>					<xs:enumeration value="withoutReplacement"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>	</xs:complexType>	<xs:complexType name="partType">		<xs:annotation>			<xs:documentation>Type specifying a part of an execution sequence</xs:documentation>		</xs:annotation>		<xs:choice minOccurs="0" maxOccurs="2">			<xs:element name="param" type="paramType"/>			<xs:element name="loopParam" type="loopParamType"/>		</xs:choice>		<xs:attribute name="tasks" type="xs:IDREFS" use="required"/>		<xs:attribute name="phase" use="required">			<xs:simpleType>				<xs:restriction base="xs:NCName">					<xs:enumeration value="train"/>					<xs:enumeration value="test"/>					<xs:enumeration value="generate"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>		<xs:attribute name="random" type="xs:boolean" use="optional"/>		<xs:attribute name="learnDuringReset" type="xs:boolean" use="optional"/>		<xs:attribute name="iterations" use="required">			<xs:simpleType>				<xs:list itemType="xs:positiveInteger"/>			</xs:simpleType>		</xs:attribute>		<xs:attribute name="id" type="xs:ID" use="optional"/>	</xs:complexType>	<xs:complexType name="executionType">		<xs:annotation>			<xs:documentation>Generic execution type, derive for specific engines</xs:documentation>		</xs:annotation>	</xs:complexType>	<xs:complexType name="executionV1">		<xs:annotation>			<xs:documentation>Networks simulated in parallel. Loops over loopParam and w elements.</xs:documentation>		</xs:annotation>		<xs:complexContent>			<xs:extension base="executionType">				<xs:sequence>					<xs:element name="loop" minOccurs="0" maxOccurs="unbounded">						<xs:complexType>							<xs:attribute name="numValues" use="required">								<xs:simpleType>									<xs:restriction base="xs:positiveInteger">										<xs:minInclusive value="1"/>									</xs:restriction>								</xs:simpleType>							</xs:attribute>							<xs:attribute name="targets" use="required">								<xs:simpleType>									<xs:restriction base="xs:IDREFS">										<xs:minLength value="1"/>									</xs:restriction>								</xs:simpleType>							</xs:attribute>						</xs:complexType>					</xs:element>					<xs:element name="sequence">						<xs:complexType>							<xs:choice maxOccurs="unbounded">								<xs:element name="part" type="partType"/>								<xs:element name="sequence">									<xs:complexType>										<xs:sequence>											<xs:element name="part" type="partType"/>										</xs:sequence>										<xs:attribute name="repeat" use="required">											<xs:simpleType>												<xs:list itemType="xs:positiveInteger"/>											</xs:simpleType>										</xs:attribute>									</xs:complexType>								</xs:element>							</xs:choice>							<xs:attribute name="repeat" type="xs:positiveInteger" use="optional" default="1"/>						</xs:complexType>					</xs:element>				</xs:sequence>				<xs:attribute name="networks" use="required">					<xs:simpleType>						<xs:restriction base="xs:IDREFS">							<xs:minLength value="1"/>						</xs:restriction>					</xs:simpleType>				</xs:attribute>				<xs:attribute name="runs" type="xs:positiveInteger" use="optional" default="1"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="engineType">		<xs:annotation>			<xs:documentation>Generic execution engine, derive specific engines from here </xs:documentation>		</xs:annotation>	</xs:complexType>	<xs:complexType name="engineV1" final="#all">		<xs:annotation>			<xs:documentation>Execute execution elements in serial</xs:documentation>		</xs:annotation>		<xs:complexContent>			<xs:extension base="engineType">				<xs:sequence>					<xs:element name="execution" type="executionV1" maxOccurs="unbounded">						<xs:annotation>							<xs:documentation>Networks executed in parallel. Loops over loopParam and w elements.</xs:documentation>						</xs:annotation>					</xs:element>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="operationType">		<xs:annotation>			<xs:documentation>Operation used in event handlers</xs:documentation>		</xs:annotation>		<xs:attribute name="type" use="required">			<xs:simpleType>				<xs:restriction base="xs:NCName">					<xs:enumeration value="assign"/>					<xs:enumeration value="add"/>					<xs:enumeration value="subtract"/>					<xs:enumeration value="multiply"/>					<xs:enumeration value="divide"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>		<xs:attribute name="values" use="required">			<xs:simpleType>				<xs:list itemType="xs:double"/>			</xs:simpleType>		</xs:attribute>	</xs:complexType>	<xs:complexType name="reportType">		<xs:annotation>			<xs:documentation>Report type used in event handlers</xs:documentation>		</xs:annotation>		<xs:attribute name="type" use="required">			<xs:simpleType>				<xs:restriction base="xs:NCName">					<xs:enumeration value="txt"/>					<xs:enumeration value="xml"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>		<xs:attribute name="location" type="xs:anyURI" use="required"/>		<xs:attribute name="id" type="xs:ID" use="required"/>	</xs:complexType>	<xs:complexType name="eventType">		<xs:annotation>			<xs:documentation>Generic event type, derive specific event models from here</xs:documentation>		</xs:annotation>	</xs:complexType>	<xs:complexType name="eventV1">		<xs:annotation>			<xs:documentation>Event model for the loop, run, sequence, part execution engines</xs:documentation>		</xs:annotation>		<xs:complexContent>			<xs:extension base="eventType">				<xs:sequence>					<xs:element name="condition" minOccurs="0" maxOccurs="unbounded">						<xs:complexType>							<xs:attribute name="type" use="required">								<xs:simpleType>									<xs:restriction base="xs:NCName">										<xs:enumeration value="multiple"/>										<xs:enumeration value="equals"/>										<xs:enumeration value="gt"/>										<xs:enumeration value="gteq"/>										<xs:enumeration value="lt"/>										<xs:enumeration value="lteq"/>									</xs:restriction>								</xs:simpleType>							</xs:attribute>							<xs:attribute name="variable" use="required">								<xs:simpleType>									<xs:restriction base="xs:NCName">										<xs:enumeration value="config"/>										<xs:enumeration value="run"/>										<xs:enumeration value="entry"/>										<xs:enumeration value="iteration"/>										<xs:enumeration value="integration"/>									</xs:restriction>								</xs:simpleType>							</xs:attribute>							<xs:attribute name="values" use="required">								<xs:simpleType>									<xs:list itemType="xs:nonNegativeInteger"/>								</xs:simpleType>							</xs:attribute>						</xs:complexType>					</xs:element>					<xs:choice maxOccurs="unbounded">						<xs:element name="record">							<xs:complexType>								<xs:attribute name="type" use="required">									<xs:simpleType>										<xs:restriction base="xs:NCName">											<xs:enumeration value="taskPatterns"/>											<xs:enumeration value="netState"/>											<xs:enumeration value="netInput"/>											<xs:enumeration value="netOutput"/>											<xs:enumeration value="netIO"/>											<xs:enumeration value="blockOutput"/>											<xs:enumeration value="weights"/>											<xs:enumeration value="synapses"/>											<xs:enumeration value="integrationInput"/>											<xs:enumeration value="integrationValues"/>										</xs:restriction>									</xs:simpleType>								</xs:attribute>								<xs:attribute name="targets" type="xs:IDREFS" use="required"/>								<xs:attribute name="precision" use="optional" default="4">									<xs:simpleType>										<xs:restriction base="xs:nonNegativeInteger">											<xs:maxInclusive value="8"/>										</xs:restriction>									</xs:simpleType>								</xs:attribute>								<xs:attribute name="report" type="xs:IDREF" use="required"/>							</xs:complexType>						</xs:element>						<xs:element name="modify">							<xs:complexType>								<xs:sequence>									<xs:element name="operation" type="operationType" maxOccurs="unbounded"/>								</xs:sequence>								<xs:attribute name="type" use="required">									<xs:simpleType>										<xs:restriction base="xs:NCName">											<xs:enumeration value="netState"/>											<xs:enumeration value="blockOutput"/>											<xs:enumeration value="weights"/>											<xs:enumeration value="integrationValues"/>											<xs:enumeration value="integrationInput"/>										</xs:restriction>									</xs:simpleType>								</xs:attribute>								<xs:attribute name="targets" type="xs:IDREFS" use="required"/>								<xs:attribute name="inputIndices" use="optional">									<xs:simpleType>										<xs:list itemType="xs:nonNegativeInteger"/>									</xs:simpleType>								</xs:attribute>								<xs:attribute name="nodeIndices" use="optional">									<xs:simpleType>										<xs:list itemType="xs:nonNegativeInteger"/>									</xs:simpleType>								</xs:attribute>							</xs:complexType>						</xs:element>						<xs:element name="modifyParam">							<xs:complexType>								<xs:sequence>									<xs:element name="operation" type="operationType" maxOccurs="unbounded"/>								</xs:sequence>								<xs:attribute name="type" use="required">									<xs:simpleType>										<xs:restriction base="xs:NCName">											<xs:enumeration value="network"/>											<xs:enumeration value="task"/>											<xs:enumeration value="execution"/>										</xs:restriction>									</xs:simpleType>								</xs:attribute>								<xs:attribute name="targets" type="xs:IDREFS" use="required"/>								<xs:attribute name="paramName" type="xs:NCName" use="required"/>							</xs:complexType>						</xs:element>					</xs:choice>				</xs:sequence>				<xs:attribute name="eventTime" use="required">					<xs:simpleType>						<xs:restriction base="xs:NCName">							<xs:enumeration value="beginPart"/>							<xs:enumeration value="endPart"/>							<xs:enumeration value="beginIteration"/>							<xs:enumeration value="endIteration"/>							<xs:enumeration value="beforeGenerate"/>							<xs:enumeration value="afterGenerate"/>							<xs:enumeration value="beforeReset"/>							<xs:enumeration value="afterReset"/>							<xs:enumeration value="beforeSetInput"/>							<xs:enumeration value="afterSetInput"/>							<xs:enumeration value="beforeResetIntegrate"/>							<xs:enumeration value="afterResetIntegrate"/>							<xs:enumeration value="afterResetOutput"/>							<xs:enumeration value="beforeResetLearn"/>							<xs:enumeration value="afterResetLearn"/>							<xs:enumeration value="beforeIntegrate"/>							<xs:enumeration value="afterIntegrate"/>							<xs:enumeration value="afterOutput"/>							<xs:enumeration value="beforeLearn"/>							<xs:enumeration value="afterLearn"/>						</xs:restriction>					</xs:simpleType>				</xs:attribute>				<xs:attribute name="parts" type="xs:IDREFS" use="required"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="eventSectionType">		<xs:annotation>			<xs:documentation>Generic type grouping events.</xs:documentation>		</xs:annotation>	</xs:complexType>	<xs:complexType name="eventModelV1">		<xs:annotation>			<xs:documentation>The event model used in engineV1.</xs:documentation>		</xs:annotation>		<xs:complexContent>			<xs:extension base="eventSectionType">				<xs:sequence>					<xs:element name="report" type="reportType" minOccurs="0" maxOccurs="unbounded"/>					<xs:element name="event" type="eventV1" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="simpleGenerator">		<xs:annotation>			<xs:documentation>Simple tasks for patternGenerator</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="taskParams" minOccurs="0">				<xs:complexType>					<xs:sequence>						<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:choice minOccurs="0">				<xs:element ref="patternSet"/>				<xs:element name="dataSource">					<xs:complexType>						<xs:sequence>							<xs:element name="sourceParams" minOccurs="0">								<xs:complexType>									<xs:sequence>										<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>									</xs:sequence>								</xs:complexType>							</xs:element>						</xs:sequence>						<xs:attribute name="type" use="required">							<xs:simpleType>								<xs:restriction base="xs:NCName"/>							</xs:simpleType>						</xs:attribute>						<xs:attribute name="columns" type="xs:positiveInteger" use="required"/>						<xs:attribute name="rows" type="xs:positiveInteger" use="optional" default="1"/>						<xs:attribute name="patterns" type="xs:nonNegativeInteger" use="required"/>					</xs:complexType>				</xs:element>			</xs:choice>			<xs:element name="attenuation" minOccurs="0">				<xs:complexType>					<xs:sequence>						<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>					<xs:attribute name="type" type="xs:NCName" use="required"/>				</xs:complexType>			</xs:element>			<xs:element name="noiseFunction" minOccurs="0">				<xs:complexType>					<xs:sequence>						<xs:element name="noiseParams" minOccurs="0">							<xs:complexType>								<xs:sequence>									<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="randGen" minOccurs="0">							<xs:complexType>								<xs:sequence>									<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>								</xs:sequence>								<xs:attribute name="type" type="xs:NCName" use="required"/>								<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>							</xs:complexType>						</xs:element>					</xs:sequence>					<xs:attribute name="type" type="xs:NCName" use="required"/>				</xs:complexType>			</xs:element>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="columns" type="xs:positiveInteger" use="required"/>		<xs:attribute name="rows" type="xs:positiveInteger" use="optional" default="1"/>		<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>		<xs:attribute name="sampleMethod" use="optional" default="withoutReplacement">			<xs:simpleType>				<xs:restriction base="xs:string">					<xs:enumeration value="withReplacement"/>					<xs:enumeration value="withoutReplacement"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>	</xs:complexType>	<xs:complexType name="compositeGenerator">		<xs:annotation>			<xs:documentation>Tasks composed of different subtasks... for patternGenerator</xs:documentation>		</xs:annotation>		<xs:sequence>			<xs:element name="taskParams" minOccurs="0">				<xs:complexType>					<xs:sequence>						<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>				</xs:complexType>			</xs:element>			<xs:element name="insert" maxOccurs="unbounded">				<xs:complexType>					<xs:sequence>						<xs:element name="insertParams" minOccurs="0">							<xs:complexType>								<xs:sequence>									<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="task" type="simpleGenerator" maxOccurs="unbounded"/>					</xs:sequence>					<xs:attribute name="type" type="xs:NCName" use="required"/>					<xs:attribute name="inColumn" type="xs:nonNegativeInteger" use="required"/>					<xs:attribute name="inRow" type="xs:nonNegativeInteger" use="optional" default="0"/>				</xs:complexType>			</xs:element>			<xs:element name="attenuation" minOccurs="0">				<xs:complexType>					<xs:sequence>						<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>					<xs:attribute name="type" type="xs:NCName" use="required"/>				</xs:complexType>			</xs:element>			<xs:element name="noiseFunction" minOccurs="0">				<xs:complexType>					<xs:sequence>						<xs:element name="noiseParams" minOccurs="0">							<xs:complexType>								<xs:sequence>									<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="randGen" minOccurs="0">							<xs:complexType>								<xs:sequence>									<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>								</xs:sequence>								<xs:attribute name="type" type="xs:NCName" use="required"/>								<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>							</xs:complexType>						</xs:element>					</xs:sequence>					<xs:attribute name="type" type="xs:NCName" use="required"/>				</xs:complexType>			</xs:element>		</xs:sequence>		<xs:attribute name="type" type="xs:NCName" use="required"/>		<xs:attribute name="columns" type="xs:positiveInteger" use="required"/>		<xs:attribute name="rows" type="xs:positiveInteger" use="optional" default="1"/>		<xs:attribute name="seed" type="xs:nonNegativeInteger" use="optional"/>		<xs:attribute name="sampleMethod" use="optional" default="withoutReplacement">			<xs:simpleType>				<xs:restriction base="xs:string">					<xs:enumeration value="withReplacement"/>					<xs:enumeration value="withoutReplacement"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>	</xs:complexType></xs:schema>